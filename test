package FINRA.Apps.eDiscovery.service;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class EncryptionServiceTest {

    private EncryptionService encryptionService;

    @BeforeEach
    void setUp() {
        encryptionService = new EncryptionService();
    }

    @Test
    void testEncryptString() {
        String plainText = "TestString123";
        String password = "MySecurePassword";

        String encryptedString = encryptionService.encryptString(plainText, password);

        assertNotNull(encryptedString, "Encrypted string should not be null");
        assertNotEquals(plainText, encryptedString, "Encrypted string should not match plain text");
    }

    @Test
    void testDecryptString() {
        String plainText = "TestString123";
        String password = "MySecurePassword";

        // First, encrypt the plain text
        String encryptedString = encryptionService.encryptString(plainText, password);

        // Decrypt the encrypted string
        String decryptedString = encryptionService.decryptString(encryptedString, password);

        assertNotNull(decryptedString, "Decrypted string should not be null");
        assertEquals(plainText, decryptedString, "Decrypted string should match the original plain text");
    }

    @Test
    void testEncryptionAndDecryptionWithWrongPassword() {
        String plainText = "TestString123";
        String correctPassword = "MySecurePassword";
        String wrongPassword = "WrongPassword";

        // Encrypt with the correct password
        String encryptedString = encryptionService.encryptString(plainText, correctPassword);

        // Attempt to decrypt with the wrong password
        Exception exception = assertThrows(Exception.class, () -> {
            encryptionService.decryptString(encryptedString, wrongPassword);
        });

        assertNotNull(exception, "An exception should be thrown when decrypting with the wrong password");
    }
}