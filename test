import org.finra.cpu.rmdownload.service.ItemDetailsSubscriber;
import org.finra.cpu.rmdownload.service.RequestManagerCaseService;
import org.finra.cpu.rmdownload.web.rest.dto.RequestManagerCaseDTO;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.*;
import reactor.bus.Event;

import static org.mockito.Mockito.*;

@RunWith(MockitoJUnitRunner.class)  // Use this to automatically initialize mocks
public class ItemDetailsSubscriberTest {

    // Mocking the dependencies
    @Mock
    private RequestManagerCaseService requestManagerCaseService;

    @Mock
    private EventBus itemDetailsEventBus;

    // Injecting mocks into the class under test
    @InjectMocks
    private ItemDetailsSubscriber itemDetailsSubscriber;

    @Before
    public void setUp() {
        // The setup method should not be required to initialize mocks if using @RunWith(MockitoJUnitRunner.class)
        // However, if you use `MockitoAnnotations.initMocks(this)` for testing without using the runner, it ensures all mocks are injected
        MockitoAnnotations.initMocks(this);  
    }

    @Test
    public void testAccept_validEvent() {
        // Preparing a sample RequestManagerCaseDTO
        RequestManagerCaseDTO requestManagerCaseDTO = new RequestManagerCaseDTO();
        requestManagerCaseDTO.setCaseId("case123");
        requestManagerCaseDTO.setUserId("user123");

        // Creating a mock RequestManagerCase object
        RequestManagerCase mockCase = new RequestManagerCase();
        mockCase.setCaseId("case123");

        // Mocking the behavior of `findOneByCaseId` to return the mock case
        when(requestManagerCaseService.findOneByCaseId("case123")).thenReturn(Optional.of(mockCase));

        // Call the method being tested
        itemDetailsSubscriber.accept(new Event<>(requestManagerCaseDTO));

        // Verify that the service's save method was called
        verify(requestManagerCaseService, times(1)).save(mockCase);
    }

    @Test
    public void testAccept_noCaseIdInDTO() {
        // Preparing a sample RequestManagerCaseDTO with no caseId
        RequestManagerCaseDTO requestManagerCaseDTO = new RequestManagerCaseDTO();
        requestManagerCaseDTO.setCaseId(null);  // Simulating a case with no ID

        // Call the method being tested
        itemDetailsSubscriber.accept(new Event<>(requestManagerCaseDTO));

        // Verify that no interaction occurred with requestManagerCaseService
        verify(requestManagerCaseService, times(0)).save(any());
    }

    @Test
    public void testAccept_caseNotFound() {
        // Preparing a sample RequestManagerCaseDTO
        RequestManagerCaseDTO requestManagerCaseDTO = new RequestManagerCaseDTO();
        requestManagerCaseDTO.setCaseId("case123");

        // Mocking the behavior of `findOneByCaseId` to return an empty Optional
        when(requestManagerCaseService.findOneByCaseId("case123")).thenReturn(Optional.empty());

        // Call the method being tested
        itemDetailsSubscriber.accept(new Event<>(requestManagerCaseDTO));

        // Verify that save was still called, but with a new empty case
        verify(requestManagerCaseService, times(1)).save(any(RequestManagerCase.class));
    }
}